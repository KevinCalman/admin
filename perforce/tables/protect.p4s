# $Author$ $Change$ $DateTime$ $File$ $Revision$

# Perforce Protections Specification.
#
#  Each line contains a protection mode, a group/user indicator, the
#  group/user name, client host id and a depot file path pattern.
#  A user gets the highest privilege granted on any line.
#
#  Mode:		The permission level or right being granted or denied.  Each
#			   permission level includes all the permissions above it,
#			   except for 'review'.  Each permission right only includes
#			   the specific right and not all the lesser rights. Modes
#			   preceded by '=' are rights; all other modes are levels.
#
#			   list   - users can see names but not contents of files;
#						users can see all non-file related metadata
#						(clients, users, changelists, jobs, etc.)
#
#			   read   - users can sync, diff, and print files
#
#			   open   - users can add, edit, delete, and integrate files
#
#			   write  - users can submit open files
#
#			   admin  - permits those administrative commands and command
#						options that don't affect the server's security
#
#			   super  - allows access to the 'p4 protect' command
#
#			   review - allows access to the 'p4 review' command; implies
#						read access
#
#			   =read  - if this right is denied, users cannot sync, diff,
#						or print files
#
#			   =branch - if this right is denied, users are not permitted
#						 to use files as a source for 'p4 integrate'
#
#			   =open   - if this right is denied, users cannot open files
#						 (add, edit, delete, integrate)
#
#			   =write  - if this right is denied, users cannot submit open
#						 files
#
#  Group/User indicator: either 'group' or 'user'.
#
#  Name:		A Perforce group or user name; may be wildcarded.
#
#  Host:		The IP address of a client host; may be wildcarded.
#
#  Path:		The part of the depot being granted access.

#		General Notes:
# No permissions should be granted on the 'user' indicator to prevent auto-licensing; 
# i.e., all views should use the 'group' indicator.
# These comments are stripped out in the version of this table that the server produces, so this file is checked in
# and all changes to the server table must be made through manipulation of this file.
# This file is read into the server by: "p4 print -q //depot/admin/tables/protect.p4s | p4 protect -i"
# Format: all non-view lines begin with '#<space>'; all view lines begin with '<tab>' and contain,
# 	<mode>	<indic>	<name>	<host>	<path>

# 		Begin views here
Protections:

# Explicit protections exclude all from everything, then selectively add
	read	group	all	*	-//...
# 		Housekeeping
# group 'build' have access to internal administration files (like this!)
	admin	group	build	*	//depot/admin/...
# all users have listing visibilty for all code, read access for all specificaions
	list	group	all	*	//depot/...
	read	group	all	*	//spec/...
# group 'build' contains automaton users for services
	review	group	build	*	//depot/...
	write	group	build	*	//depot/.../pom.xml
	write	group	build	*	//depot/.../build.xml
	write	group	build	*	//depot/build/main/metadata/...
# group 'level3' has read access to all code
	read	group	level3	*	//depot/...
# group 'viewers' has read-only access to all code
	read	group	viewers	* 	//depot/...
	=write	group	viewers	* 	-//depot/...
# common access
	write	group	develop	* 	//depot/build/...
	write	group	develop	* 	//depot/thirdparty/...
	write	group	develop	* 	//depot/users/...
	write	group	all	* 	//depot/users/...

# 		Specific product listings
# Active legacy products
	write	group	alertf	* 	//depot/alertfind/...
	write	group	alertf	* 	//depot/afportal/...
	read	group	develop	* 	//depot/alertfind/...
	read	group	develop	* 	//depot/afportal/...
	write	group	develop	* 	//depot/afportal/...
	write	group	develop	* 	//depot/cmc/...
	write	group	develop	* 	//depot/common/...
	write	group	develop	* 	//depot/extropy/...
	write	group	develop	* 	//depot/monitor/...
	write	group	develop	* 	//depot/sso/...
	write	group	develop	* 	//depot/utils/...
	write	group	develop	* 	//depot/ems/*/*/dev/...
	write	group	develop	* 	//depot/ems/*/*/release/...
	write	group	develop	* 	//depot/ems/*/main/...
	write	group	develop	* 	//depot/ems/main/...
	=write	group	develop	* 	-//depot/ems/backend/burr/release/...
	write	group	devops	* 	//depot/ems/backend/burr/release/...
	read	group	relman	* 	//depot/...
	write	group	relman	* 	//depot/ems/clientapp/releases/...
	=write	group	all 	*	-//depot/ems/clientapp/tags/...
	=write	group	all 	*	-//depot/ems/clientapp/releases/...
	write	group	develop	* 	//depot/ems/clientapp/...
	write	group	develop	* 	//depot/ems/thirdparty/...
	write	group	develop	* 	//depot/ems/email-security/...
	write	group	develop	* 	//depot/ems/monitoring/...
	write	group	develop	* 	//depot/ems/test-automation/...
	write	group	develop	* 	//depot/ems/webmail/...
	write	group	develop	* 	//depot/testframework/...
	write	group	tauto	* 	//depot/ems/test-automation/...

# Performance
	read	group	perfeng	* 	//depot/ems/...
	write	group	perfeng	* 	//depot/common/performance/...

# Dormant legacy products
	read	group	develop	* 	//depot/mview/...
	read	group	develop	* 	//depot/ems/...

# 		CIBR/mainline model support
# Methodology: the groups '_dev', '_int', '_main', '_rel', & '_sus' each have
# write access to increasingly "firm" branching tiers of the same name.
# All individual developers are members of 'dev'.
# Group 'dev' is a member of '_int', so all developers are automatically in '_int'.
# Release leads are permanent members of group '_main', and
# individual int branch leads are made transient members of group '_main'
# when they need to integrate (promote) their int branch to main.
# Release leads and sustaining developers are permanent members of group '_neo'.
# Devops are permanent members of group '_rel'.
	open	group	_dev	* 	//depot/sus/...
	=write	group	_dev	* 	-//depot/sus/...
	write	group	_sus	* 	//depot/sus/...

	open	group	_dev	* 	//depot/rel/...
	=write	group	_dev	* 	-//depot/rel/...
	write	group	_rel	* 	//depot/rel/...

# 'neo' is deprecated, will be removed when "ems-backend 6.8.5" is no longer in production.
	open	group	_dev	* 	//depot/neo/...
	=write	group	_dev	* 	-//depot/neo/...
	write	group	_neo	* 	//depot/neo/...

	open	group	_dev	*	//depot/main/...
	=write	group	_dev	* 	-//depot/main/...
	write	group	_main	*	//depot/main/...

	open	group	_dev	*	//depot/int/...
	=write	group	_dev	* 	-//depot/int/...
	write	group	_int	*	//depot/int/...

	open	group	_dev	* 	//depot/dev/...
	=write	group	_dev	* 	-//depot/dev/...
	write	group	_dev	* 	//depot/dev/...

#		Specific Components controls
# These are additional restrictions on top of the CIBR controls above. 
	=write	group	all			* 	-//depot/main/emsbe.database/...
	write	group	database	* 	//depot/main/emsbe.database/...
# Super access at the bottom to superscede everything else
# group 'admin' have super access to everything
	super	group	admin	*	//...
#eof
